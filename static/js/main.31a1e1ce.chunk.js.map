{"version":3,"sources":["Components/UserInfo/UserInfo.tsx","Components/TodoInfo/TodoInfo.tsx","Components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","name","email","className","TodoInfo","title","completed","user","classNames","TodoList","preparedTodos","map","todo","id","users","username","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","userId","find","App","useState","td","setTodo","setUserId","setTitle","titleError","setTitleError","userIdError","setUserIdError","handleInputChange","event","target","value","replace","onSubmit","preventDefault","prev","length","htmlFor","type","placeholder","onChange","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31a1e1ce.chunk.js","sourcesContent":["import { User } from '../../Types/User';\nimport './UserInfo.scss';\n\nexport const UserInfo: React.FC<User> = ({ name, email }) => (\n  <div className=\"user\">\n    <h4 className=\"user__name\">{name}</h4>\n    <h5 className=\"user__email\">{email}</h5>\n  </div>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\nimport './TodoInfo.scss';\n\nexport const TodoInfo: React.FC<Todo> = ({ title, completed, user }) => (\n  <div className=\"todo\">\n    <h2 className=\"todo__title\">{title}</h2>\n    <h3 className={classNames(\n      'todo__status',\n      {\n        'todo__status--completed': completed === true,\n      },\n    )}\n    >\n      {completed ? 'Completed' : 'In progress'}\n    </h3>\n    {user && <UserInfo {...user} />}\n  </div>\n);\n","import { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  preparedTodos: Todo [];\n};\n\nexport const TodoList: React.FC<Props> = ({ preparedTodos }) => (\n  <ul className=\"todoList\">\n    {preparedTodos.map(todo => (\n      <li key={todo.id} className=\"todoList__item\">\n        <TodoInfo {...todo} />\n      </li>\n    ))}\n  </ul>\n);\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React, { useState } from 'react';\nimport { Todo } from './Types/Todo';\nimport { TodoList } from './Components/TodoList/TodoList';\nimport './App.scss';\nimport todos from './api/todos';\nimport users from './api/users';\n\nconst preparedTodos: Todo [] = todos.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId) || null,\n}));\n\nconst App: React.FC = () => {\n  const [td, setTodo] = useState(preparedTodos);\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const addTodo = () => {\n    setTodo((prev => {\n      const newTodo = {\n        user: users.find(user => user.id === userId) || null,\n        userId,\n        id: prev.length + 1,\n        title,\n        completed: false,\n      };\n\n      return [newTodo, ...prev];\n    }));\n  };\n\n  // eslint-disable-next-line max-len\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        setTitle(value.replace(/[^a-zA-Z\\d\\s]/, ''));\n        setTitleError(false);\n        break;\n      case 'userId':\n        setUserId(+value);\n        setUserIdError(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handeleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    reset();\n    addTodo();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo form</h1>\n      <>\n        <form className=\"App__form\" onSubmit={handeleSubmit}>\n          <label htmlFor=\"title\" className=\"App__form-item\">\n\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"App__form-title\"\n              value={title}\n              placeholder=\"Title\"\n              onChange={handleInputChange}\n            />\n            {titleError && (\n              <div className=\"App__form-error\">\n                Please, enter the title.\n              </div>\n            )}\n          </label>\n          <label htmlFor=\"\" className=\"App__form-item\">\n            <select\n              id=\"userId\"\n              name=\"userId\"\n              className=\"App__form-input\"\n              value={userId}\n              onChange={handleInputChange}\n            >\n              <option value=\"0\" disabled selected>\n                Choose name\n              </option>\n              {users.map(user => (\n\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {userIdError && (\n              <div className=\"App__form-error\">\n                Please, choose a user.\n              </div>\n            )}\n          </label>\n          <button type=\"submit\" className=\"App__form-button\">\n            Add Todo\n          </button>\n        </form>\n      </>\n      <TodoList preparedTodos={td} />\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}